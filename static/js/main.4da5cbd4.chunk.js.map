{"version":3,"sources":["components/containers/Contact.js","actions/ContactAction.js","actions/ActionTypes.js","components/containers/Contacts.js","components/presentational/TextInputGroup.js","components/containers/AddContact.js","components/containers/EditContact.js","components/presentational/Header.js","reducers/ContactReducer.js","reducers/AllReducers.js","store.js","App.js","index.js"],"names":["Contact","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","showContactInfo","onDeleteClick","id","props","deleteContact","inherits","createClass","key","value","_this2","console","log","contact","_this$props$contact","name","phone","nameOfStreet","address","constructor","String","street","react_default","a","createElement","onClick","setState","className","style","cursor","color","float","bind","react_router_dom","to","marginRight","fontSize","paddingTop","Component","connect","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","axios","delete","type","payload","t0","stop","_x3","Contacts","getContacts","contacts","react","map","containers_Contact","_ref","_callee","res","_context","get","sent","data","_x","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","preventDefault","_this$state","newContact","addContact","history","push","defineProperty","target","_this$state2","presentational_TextInputGroup","_ref4","_callee4","_context4","post","_x4","EditContact","editedContact","match","params","editContact","getContact","nextProps","nextState","_nextProps$contact","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","put","_x5","Header","branding","href","initialState","allReducers","combineReducers","undefined","action","_objectSpread","toConsumableArray","filter","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","es","presentational_Header","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4da5cbd4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { deleteContact } from \"../../actions/ContactAction\";\n\n\nexport class Contact extends Component {\n    state = {\n        showContactInfo: false,\n    };\n    onDeleteClick  = id => {\n        this.props.deleteContact(id);\n    };\n    render(){\n        console.log(this.props.contact)\n        const { id, name, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n        \n        var nameOfStreet=''\n        if(this.props.contact.address.constructor === String){\n            nameOfStreet=this.props.contact.address\n        }else{\n            nameOfStreet=this.props.contact.address.street\n        }\n        \n        return(\n            <div>\n                <h4>\n                    {name}{\" \"}\n                    <i \n                        onClick = {() =>\n                            this.setState({\n                                showContactInfo: !this.state.showContactInfo,\n                            })\n                        }\n                        className = \"fas fa-sort-down\"\n                        style = {{cursor: \"pointer\", color: \"blue\"}}\n                        />\n                    <i \n                        className = \"fas fa-times\"\n                        style = {{cursor: \"pointer\", float:\"right\", color: \"red\"}} \n                        onClick = {this.onDeleteClick.bind(this, id)}\n                    />\n                    <Link to ={`contact/edit/${id}`}>\n                        <i\n                            className = \"fas fa-pencil-alt\"\n                            style={{\n                                cursor: \"pointer\",\n                                float: \"right\",\n                                color: \"green\",                               \n                                marginRight: \"1rem\",\n                                fontSize: \"0.7em\",\n                                paddingTop: \"0.3em\",\n                            }}\n                        />\n                    </Link>                    \n                </h4>\n                    {showContactInfo ? (\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item\">Address: {nameOfStreet}</li>\n                            <li className=\"list-group-item\">Phone: {phone}</li>\n                        </ul>\n                    ) : null }\n            </div>\n        );\n    }\n}\nContact.propTypes = {\n    contact: propTypes.object.isRequired,\n    deleteContact: propTypes.func.isRequired,\n};\nexport default connect(\n    null, \n    { deleteContact },    \n)(Contact);\n","import { GET_CONTACTS,\n    DELETE_CONTACT,\n    ADD_CONTACT,\n    GET_CONTACT,\n    EDIT_CONTACT,\n} from \"./ActionTypes\";\nimport axios from \"axios\";\n\nexport const getContacts = () => async dispatch => {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    dispatch({\n        type: GET_CONTACTS,\n        payload: res.data,\n    });\n};\nexport const getContact = id => async dispatch => {\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n        type: GET_CONTACT,\n        payload: res.data,\n    });\n};\nexport const deleteContact = id => async dispatch => {\n    try {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);    \n        dispatch({\n            type: DELETE_CONTACT,\n            payload: id,\n        });\n    } catch (error) {\n        dispatch ({\n            type: DELETE_CONTACT,\n            payload: id,\n        });\n    }\n};\nexport const addContact = contact => async dispatch => {\n    const res =await axios.post(\n        `https://jsonplaceholder.typicode.com/users`,\n        contact,\n        );\n    dispatch({\n        type: ADD_CONTACT,\n        payload: res.data,\n    });\n    };\nexport const editContact = contact => async dispatch =>{\n    const res = await axios.put(\n        `https://jsonplaceholder.typicode.com/users/${contact.id}`,\n        contact,\n    );\n    dispatch({\n        type: EDIT_CONTACT,\n        payload: res.data,\n    });\n};","export const GET_CONTACTS = \"GET_CONTACTS\"; \n\nexport const GET_CONTACT = \"GET_CONTACT\";\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\nexport const ADD_CONTACT = \"ADD_CONTACT\";\nexport const EDIT_CONTACT = \"EDIT_CONTACT\";","import React, { Component, Fragment } from \"react\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { getContacts } from \"../../actions/ContactAction\";\n\nexport class Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n  render() {    \n    const { contacts } = this.props;\n    return (\n      <Fragment>\n        <h1 className=\"display-5 mb-2\">\n          <span className=\"text-danger\">Список контактов</span>\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </Fragment>\n    );\n  }\n}\nContacts.propTypes = {\n  contacts: propTypes.array.isRequired,\n  getContacts: propTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.contacts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { getContacts },\n)(Contacts);\n\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup= ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange ={onChange}\n            />\n        </div>\n    );\n};\nTextInputGroup.propTypes = {\n    label: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    value: propTypes.string.isRequired,\n    placeholder: propTypes.string.isRequired,\n    type: propTypes.string.isRequired,\n    onChange: propTypes.func.isRequired,\n    error: propTypes.string,\n};\nTextInputGroup.defaultProps = {\n    type: 'text'\n  };\nexport default TextInputGroup;","import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport TextInputGroup from \"../presentational/TextInputGroup\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../actions/ContactAction\";\n\nexport class AddContact extends Component {\n    state = {\n        name: \"\",\n        address:\"\",\n        phone: \"\",\n        errors: {},\n    };\n    onSubmit = e => {\n        e.preventDefault();\n\n        const { name, address, phone } = this.state;\n        if (name === \"\") {\n            this.setState({errors: {name: \"Пожалуйста, введите имя\"} });\n            return;\n        }\n        if (phone ===\"\") {\n            this.setState({errors: {phone: \"Пожалуйста, введите номер телефона\"} });\n            return;\n        }\n        if (address ===\"\") {\n            this.setState({errors: {address: \"Пожалуйста, введите адрес\"} });\n            return;\n        }\n        const newContact = {\n            name,\n            address,\n            phone,\n        };\n        this.props.addContact(newContact);\n\n        this.setState = ({\n            name: \"\",\n            address: \"\",\n            phone: \"\",\n            errors: {},\n        });\n\n        this.props.history.push(\"/\");\n    };\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n    render() {\n        const { name, address, phone, errors } = this.state;  \n\n        return (\n            <div className=\"card mb-3\">\n                <div className=\"card-header\">Добавить контакт</div>\n                    <div className=\"card-body\">\n                        <form onSubmit={this.onSubmit}>\n                            <TextInputGroup\n                                label=\"ФИО\"\n                                name=\"name\"\n                                placeholder=\"Введите имя\"\n                                value={name}\n                                onChange={this.onChange}\n                                error={errors.name}\n                            />\n                            <TextInputGroup\n                                label=\"Адрес\"\n                                name=\"address\"\n                                type=\"address\"\n                                placeholder=\"Введите адрес\"\n                                value={address}\n                                onChange={this.onChange}\n                                error={errors.address}\n                            />\n                            <TextInputGroup\n                                label=\"Номер телефона\"\n                                name=\"phone\"\n                                placeholder=\"Введите номер телефона\"\n                                value={phone}\n                                onChange={this.onChange}\n                                error={errors.phone}\n                            />\n                            <input\n                                type=\"submit\"\n                                value=\"Добавить контакт\"\n                                className=\"btn btn-danger btn-block\"\n                            />\n                        </form>\n                    </div>\n                </div>   \n        );\n    }\n}\nAddContact.propTypes = {\n    addContact: propTypes.func.isRequired,\n    };\nexport default connect(\n    null,\n    { addContact },\n    )(AddContact);\n\n\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../presentational/TextInputGroup\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\";\nimport { getContact, editContact } from \"../../actions/ContactAction\";\n\nexport class EditContact extends Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n   \n  }\n  componentWillReceiveProps(nextProps, nextState) {\n    const { name, address, phone } = nextProps.contact;\n    this.setState({ name, address, phone });\n    console.log(address.street)\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, address, phone } = this.state;\n    \n    if (name === \"\") {\n      this.setState({ errors: { name: \"Введите имя\" } });\n      return;\n    }\n\n    if (address === \"\") {\n      this.setState({ errors: { address: \"Введите адрес\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Введите номер телефона\" } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const editedContact = {\n      id,\n      name,\n      address,\n      phone,\n    };\n    this.props.editContact(editedContact);\n    \n    this.setState({\n      name: \"\",\n      address: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, address, phone, errors } = this.state;\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Редактировать контакт</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"ФИО\"\n              name=\"name\"\n              placeholder=\"Введите имя\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Адрес\"\n              name=\"address\"\n              type=\"address\"\n              placeholder=\"Введите адрес\"\n              value={address.street}\n              onChange={this.onChange}\n              error={errors.address}\n            />\n            <TextInputGroup\n              label=\"Номер телефона\"\n              name=\"phone\"\n              placeholder=\"Введите номер телефона\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Редактировать контакт\"\n              className=\"btn btn-dark btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nEditContact.propTypes = {\n  contact: propTypes.string.isRequired,\n  getContact: propTypes.func.isRequired,\n};\nconst mapStateToProps = state => ({\n  contact: state.contact.contact,\n});\nexport default connect(\n  mapStateToProps,\n  { getContact, editContact },\n)(EditContact);","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n    const { branding } = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-3\">\n          <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">\n              {branding}\n            </a>\n            <div>\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link to=\"/\" className=\"nav-link\">\n                    <i className=\"fas fa-home\" /> Главная\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/contact/add\" className=\"nav-link\">\n                    <i className=\"fas fa-plus\" /> Добавить \n                  </Link>\n                </li>                \n              </ul>\n            </div>\n          </div>\n        </nav>\n      );\n    };\n  Header.defaultProps = {\n    branding: 'Contact Book'\n  };\nHeader.propTypes = {\n    branding: propTypes.string.isRequired,\n};\nexport default Header; \n\n","import {\n    GET_CONTACTS,\n    GET_CONTACT,\n    DELETE_CONTACT,\n    ADD_CONTACT,\n    EDIT_CONTACT,\n} from \"../actions/ActionTypes\";\n\nconst initialState = {\n    contacts: [],\n    contact: {},\n};\nexport default function (state=initialState, action) {\n    switch (action.type){\n        case GET_CONTACTS:\n            return { ...state, contacts: action.payload };\n        case GET_CONTACT:\n            return { ...state, contact: action.payload }; \n        case ADD_CONTACT: {\n            return { ...state, contacts: [ ...state.contacts, action.payload ] };            \n        } \n        case EDIT_CONTACT: {\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => {\n                    if(contact.id === action.payload.id) return action.payload;\n                    else return contact;\n                }),\n            };\n        }\n        case DELETE_CONTACT: {\n            return {\n              ...state,\n              contacts: state.contacts.filter(\n                contact => contact.id !== action.payload,\n              ),\n            };\n          }\n          default:\n            return state;\n        }\n      }\n","import { combineReducers } from \"redux\";\nimport contactReducer from \"./ContactReducer\";\n\nconst allReducers= combineReducers({\n    contact: contactReducer,\n  });\nexport default allReducers;","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from \"redux-thunk\";\nimport allReducers from \"./reducers/AllReducers\";\n\nconst initialState = {};\nconst middleWare = [thunk];\nconst store = createStore(\n    allReducers,\n    initialState,\n    composeWithDevTools (\n        applyMiddleware(...middleWare),        \n    ),\n);\nexport default store;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/containers/Contacts\";\nimport AddContact from \"./components/containers/AddContact\";\nimport EditContact from \"./components/containers/EditContact\";\nimport Header from \"./components/presentational/Header\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding = \"Контактная книга\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />                \n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}